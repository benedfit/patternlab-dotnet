@using PatternLab.Core.Helpers
@model IEnumerable<PatternLab.Core.Models.Pattern>
@{
    Layout = "_Layout.cshtml";
    var typeDash = Request.RequestContext.RouteData.Values["id"] != null ? Request.RequestContext.RouteData.Values["id"].ToString() : string.Empty;
    var patterns = Model != null && Model.Any() ? Model : new List<PatternLab.Core.Models.Pattern>();
}		
<!-- View All Patterns in a Pattern Sub-Type -->
<div class="sg-main" role="main">
			
	<!-- Patterns -->
	<div id="sg-patterns">
		@foreach (var pattern in patterns)
		{
		    var patternName = pattern.Name.StripOrdinals();
            <div id="{{ patternPartial }}" class="sg-pattern">
		        <h2 class="sg-pattern-head" ><a href="../../patterns/@(pattern.PathDash)/@(pattern.PathDash).html" class="patternLink" data-patternpartial="@pattern.Partial">@patternName.ToDisplayCase()</a></h2>
		        <div class="sg-pattern-body">
		            {{{ patternPartialCode }}}
		            <div class="sg-code" style="display: none">
		                {{# patternLineageExists }}
		                <div class="sg-code-contains">
		                    This pattern contains: 
		                    {{# patternLineages }}
		                    <a href="{{ lineagePath }}"><code>{{ lineagePattern }}</code></a>
		                    {{/ patternLineages }}
		                </div>
		                {{/ patternLineageExists }}
		                <h3 class="sg-code-head">HTML</h3>
		                <pre class="sg-code-html">
							<code>
								{{{ patternPartialCodeE }}}
							</code>
						</pre>
		                {{# patternCSSExists }}
		                <h3 class="sg-code-head">CSS</h3>
		                <pre class="sg-code-css">
								<code>
									{{ patternCSS }}
								</code>
							</pre>
		                {{/ patternCSSExists }}
		            </div>
		        </div>
		    </div>
		}
	</div> <!--end #sg-patterns-->
	
</div><!--end .sg-main-->
		
<!-- JS to hook everything together and do annotations -->
<script>
	// handle injection of items from PHP
	var patternPartial = "@(!string.IsNullOrEmpty(typeDash) ? string.Format("viewall-{0}", typeDash.StripOrdinals()) : string.Empty)";
	var lineage = "";
</script>